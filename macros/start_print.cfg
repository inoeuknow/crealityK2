
[gcode_macro START_PRINT]
variable_prepare: 0
variable_bed_temp: 0
variable_chamber_temp: 0
variable_chamber_soaktime: 0
variable_extruder_temp: 0
variable_material: "PLA"
variable_use_chamber_heater: 0

gcode:
  variable_prepare: 0
  BOX_START_PRINT
  G90
  
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(printer["gcode_macro _USER_VARIABLES"].default_extruder_temp)|float %}
  {% set Z_ADJUST = params.Z_ADJUST|default(0)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(printer["gcode_macro _USER_VARIABLES"].default_bed_temp)|float %}
  {% set USE_CHAMBER_HEATER = params.USE_CHAMBER_HEATER|default(printer["gcode_macro _USER_VARIABLES"].default_use_chamber_heater)|default(0)|int %} # Use chamber heater
  {% set CHAMBER_TEMP = params.CHAMBER_TEMP|default(printer["gcode_macro _USER_VARIABLES"].default_chamber_temp)|int %} # Chamber temperature setpoint
  {% set CHAMBER_SOAKTIME = params.CHAMBER_SOAKTIME|default(printer["gcode_macro _USER_VARIABLES"].default_chamber_soak_time)|int %} # Chamber temperature setpoint
  {% set MATERIAL = params.MATERIAL|default(printer["gcode_macro _USER_VARIABLES"].default_material)|string %} # Material type set in the slicer
  
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=extruder_temp VALUE={EXTRUDER_TEMP}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=bed_temp VALUE={BED_TEMP}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=chamber_temp VALUE={CHAMBER_TEMP}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=chamber_soaktime VALUE={CHAMBER_SOAKTIME}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=use_chamber_heater VALUE={USE_CHAMBER_HEATER}
  SET_GCODE_VARIABLE MACRO=START_PRINT VARIABLE=material VALUE='"{MATERIAL}"'
  
  G28
  
  {% set sp_actions = printer["gcode_macro _USER_VARIABLES"].startprint_actions %}
  {% for action in sp_actions %}

    {% if action == "extruder_preheating" %}
      _MODULE_EXTRUDER_PREHEATING
    {% elif action == "heat_bed" %}
      _MODULE_HEAT_BED
    {% elif action == "heat_chamber" %}
      _MODULE_HEAT_CHAMBER
    {% elif action == "soak_chamber" %}
      _MODULE_SOAK_CHAMBER
    {% elif action == "tilt_calib" %}
      _MODULE_TILTING
    {% elif action == "bedmesh" %}
      _MODULE_BED_MESH
    {% elif action == "extruder_heating" %}
      _MODULE_HEAT_EXTRUDER
    {% elif action == "custom1" %}
      _MODULE_CUSTOM1
    {% elif action == "custom2" %}
      _MODULE_CUSTOM2
    {% else %}
      { action_raise_error("Unknown module called in START_PRINT! Please verify your startprint_actions variable override!") }
    {% endif %}

  {% endfor %}
    
  #_MODULE_EXTRUDER_PREHEATING
  #_MODULE_HEAT_BED
  #_MODULE_HEAT_CHAMBER
  #_MODULE_SOAK_CHAMBER
  #_MODULE_TILTING
  #_MODULE_CUSTOM1
  #_MODULE_BED_MESH
  #_MODULE_CUSTOM2
  #_MODULE_HEAT_EXTRUDER
  
  M220 S100 ;Reset Feedrate
  # M221 S100 ;Reset Flowrate
  G21
  SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY=10
  M204 S5000
  SET_VELOCITY_LIMIT ACCEL_TO_DECEL=5000
  

  {% if MATERIAL not in printer["gcode_macro _USER_VARIABLES"].material_parameters %}
    RESPOND MSG="Material '{MATERIAL}' is unknown. Setting material offset to 0" color="warning"
    { action_raise_error("Add this new material to your material_parameters variable!") }
  {% else %}
    RESPOND MSG="Material '{MATERIAL}' is used" color="info"
    {% set material = printer["gcode_macro _USER_VARIABLES"].material_parameters[MATERIAL] %}
  {% endif %}

  {% if Z_ADJUST != 0 %}
    RESPOND MSG="Setting Z offset from slicer of {Z_ADJUST} ..." color="info"
    SET_GCODE_OFFSET Z_ADJUST={Z_ADJUST} MOVE=1
  {% endif %}

  {% if material.additional_z_offset != 0 %}
    RESPOND MSG="Setting additional material offset for {MATERIAL} of {material.additional_z_offset} ..." color="info"
    SET_GCODE_OFFSET Z_ADJUST={material.additional_z_offset} MOVE=1
  {% endif %}
  
  G92 E0 ; Reset Extruder
  SET_PIN PIN=extruder_fan VALUE=1
  
  RESPOND MSG="Start printing!" color="info"

  SKEW_PROFILE LOAD=calilantern_skew_profile

[gcode_macro _MODULE_EXTRUDER_PREHEATING]
gcode:
 
  {% set CURRENT_TEMP = printer.extruder.temperature|float %}
  {% set EXTRUDER_TEMP = printer["gcode_macro _USER_VARIABLES"].safe_extruder_temp|float %}
    
  {% if CURRENT_TEMP != EXTRUDER_TEMP %}
      RESPOND MSG="Pre-heating extruder temperature to {EXTRUDER_TEMP} from {CURRENT_TEMP}..." COLOR="info" 
      
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
      TEMPERATURE_WAIT SENSOR=extruder  MINIMUM={EXTRUDER_TEMP} MAXIMUM={EXTRUDER_TEMP+1}
  {% endif %}

  RESPOND MSG="Extruder pre-heated to {EXTRUDER_TEMP} degrees" COLOR="success" 
	
[gcode_macro _MODULE_HEAT_BED]
gcode:

  {% set CURRENT_TEMP = printer.heater_bed.temperature|float %}
  {% set BED_TEMP = printer["gcode_macro START_PRINT"].bed_temp %}

  {% if CURRENT_TEMP != BED_TEMP %}
        RESPOND MSG="Setting heater bed temperature to {BED_TEMP} from {CURRENT_TEMP}..." COLOR="info" 
        
        SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
        TEMPERATURE_WAIT SENSOR="heater_bed"  MINIMUM={BED_TEMP} MAXIMUM={BED_TEMP+1}
        #M190 S{BED_TEMP}
    {% endif %}
    
     RESPOND MSG="Heater bed set to {BED_TEMP} degrees" COLOR="success" 
    
[gcode_macro _MODULE_HEAT_CHAMBER]
gcode:

  {% set CHAMBER_TEMP = printer["gcode_macro START_PRINT"].chamber_temp %}
  {% set USE_CHAMBER_HEATER = printer["gcode_macro START_PRINT"].use_chamber_heater %}

  {% if USE_CHAMBER_HEATER %}
	  HEAT_CHAMBER TEMP={CHAMBER_TEMP}
  {% endif %}

[gcode_macro _MODULE_SOAK_CHAMBER]
gcode:

  {% set SOAKTIME = printer["gcode_macro START_PRINT"].chamber_soaktime %}

  {% if SOAKTIME > 0 %}
    {% for i in range(0, SOAKTIME) %}
        RESPOND MSG="Heatsoaking chamber, {SOAKTIME-i} minutes left..." COLOR="info"
        G4 P{60000 * 1}
    {% endfor %}
        
    RESPOND MSG="Heatsoaking complete" COLOR="success"
  {% endif %}

[gcode_macro _MODULE_TILTING]
gcode:

  RESPOND MSG="Staring Z_TILT_ADJUST" COLOR="info" 
	
  Z_TILT_ADJUST
  G28 Z
	
  RESPOND MSG="Z_TILT_ADJUST complete" COLOR="success" 
	
[gcode_macro _MODULE_BED_MESH]
gcode:

  {% set BED_TEMP = printer["gcode_macro START_PRINT"].bed_temp %}
  {% set CHAMBER_TEMP = printer["gcode_macro START_PRINT"].chamber_temp %}

  {% if printer.scanner %} # cartographer

    RESPOND MSG="Bed mesh measurement..." color="info"
    CARTOGRAPHER_TOUCH
    BED_MESH_CALIBRATE PROFILE=adaptive ADAPTIVE=1

  {% else %} # everyone else
    _MESH_IF_NEEDED BED_TEMP={BED_TEMP} CHAMBER_TEMP={CHAMBER_TEMP}
    RESPOND MSG="Loading bed mesh: {BED_TEMP}c_{CHAMBER_TEMP} degrees ..." color="info"
    BED_MESH_PROFILE LOAD={BED_TEMP}c_{CHAMBER_TEMP}c
    RESPOND MSG="MESH: {BED_TEMP}c_{CHAMBER_TEMP} degrees" color="info"
  {% endif %}

[gcode_macro _MODULE_HEAT_EXTRUDER]
gcode:

  {% set CURRENT_TEMP = printer.extruder.temperature|float %}
  {% set SETPOINT_TEMP = printer["gcode_macro START_PRINT"].extruder_temp %}
    
  {% if CURRENT_TEMP != SETPOINT_TEMP %}
      RESPOND MSG="Heating nozzle from {CURRENT_TEMP} to {SETPOINT_TEMP}" COLOR="info" 
      SET_HEATER_TEMPERATURE HEATER=extruder TARGET={SETPOINT_TEMP}
      TEMPERATURE_WAIT SENSOR=extruder  MINIMUM={SETPOINT_TEMP} MAXIMUM={SETPOINT_TEMP+1}
  {% endif %}

  RESPOND MSG="Extruder heated to {SETPOINT_TEMP} degrees" COLOR="success" 

[gcode_macro _MODULE_CUSTOM1]
gcode:

  PRINT_PREPARE_CLEAR
  BOX_NOZZLE_CLEAN
    
[gcode_macro _MODULE_CUSTOM2]
gcode:

  BOX_GO_TO_EXTRUDE_POS#M1500
  
